<?xml  version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:jee="http://www.springframework.org/schema/jee"
    xmlns:lang="http://www.springframework.org/schema/lang"
    xmlns:p="http://www.springframework.org/schema/p"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:util="http://www.springframework.org/schema/util"
    xmlns:security="http://www.springframework.org/schema/security"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee.xsd
        http://www.springframework.org/schema/lang http://www.springframework.org/schema/lang/spring-lang.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
        http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd
        http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.1.xsd">
    <!-- Autowire the implementation classes -->
    <context:annotation-config />
    <context:component-scan base-package="com.complaints.resources" />

    <!-- Email Notification Service -->
    <util:properties id="smtpProperties" location="classpath:smtp.properties"/>

    <bean id="emailNotificationService" class="com.complaints.notification.email.EmailNotificationService" />
    <bean id="emailBuilder" class="com.complaints.notification.email.EmailBuilder" />

    <!-- Velocity: Email template injection -->
    <bean id="velocityEngine" class="org.springframework.ui.velocity.VelocityEngineFactoryBean">
        <property name="velocityProperties">
            <value>
                resource.loader=class
                class.resource.loader.class=org.apache.velocity.runtime.resource.loader.ClasspathResourceLoader
            </value>
        </property>
    </bean>
    <!-- Email Notification Service -->

    <!--
		SPRING SECURITY SETUP
	-->
	<!-- Use a SHA256 encoder with a salt -->
    <bean class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder" id="passwordEncoder"/>
	
	<bean id="userDAOImpl" class="com.complaints.dao.UserDAOImpl" />
	<bean id="complaintDAO" class="com.complaints.dao.ComplaintDAOImpl" />

    <bean id="commService" class="com.complaints.service.CommServiceImpl" />
    <bean id="complaintService" class="com.complaints.service.ComplaintServiceImpl" />
	<bean id="userServiceImpl" class="com.complaints.service.UserServiceImpl" >
			<constructor-arg ref="passwordEncoder" />
	</bean>
	
	<!-- Auth manager calls userServiceImpl -->
	<security:authentication-manager id="authenticationManager">
		<security:authentication-provider user-service-ref="userServiceImpl">
			<security:password-encoder ref="passwordEncoder"></security:password-encoder>
		</security:authentication-provider>
	</security:authentication-manager>
	
	<security:http
			realm="Protected API"
			use-expressions="true"
			auto-config="false"
			create-session="stateless"
			entry-point-ref="unauthorizedEntryPoint"
			authentication-manager-ref="authenticationManager">
		<security:custom-filter ref="authenticationTokenProcessingFilter" position="FORM_LOGIN_FILTER" />
		<security:intercept-url pattern="/service/user/authenticate" access="permitAll" />
		<security:intercept-url pattern="/service/user/getUser" access="hasRole('ROLE_USER')" />
		<security:intercept-url pattern="/service/user/changePassword" access="hasRole('ROLE_USER')" />
		<security:intercept-url pattern="/service/complaint/**" access="hasRole('ROLE_USER')" />
		
	</security:http>
	
	<bean id="unauthorizedEntryPoint" class="com.complaints.utils.UnauthorizedEntryPoint" />
	
	<bean id="authenticationTokenProcessingFilter" class="com.complaints.utils.AuthenticationTokenProcessingFilter">
		<constructor-arg ref="userServiceImpl" />
	</bean>
</beans>